day1 12/04/2021

1.Type Casting

Primitive Type casting:

•Allows us to assign one primitive type value to another primitive type
•There are two types of primitive type castings: implicit and explicit castings
•Cast Operator is needed to manually convert a value

1.Implicit casting:

•Casting smaller primitive types to larger primitive types
•Implicitly done by the compiler

byte a = 25;                     short x = 1000;
int b = a;                       long y = (long)x;

2.Explicit casting:

•Casting larger primitive types to smaller primitive types
•Must be done explicitly

int a =100;                      long x= 2000;
byte b = (byte)a;                short y = (short)x;




Primitives:

	double > float > long > int > short > byte

	smaller primitives can be directly assigned to larger primitive type
	larger primitives can NOT be directly assigned to smaller primitive types (need to be casted manually)


2.String Practices

1. W hat types of casting we have?
a) implicit
== done by compiler
== smaller to bigger data type
== no loss data

b) explicit
== done by developer
== bigger to smaller
== we can lose data

===================================================

 Topics:
              1.Type Casting
              2.String Practices


              1. Type Casting

                a.Implicit Casting
                  -Done by compiler
                  -Smaller to bigger data type
                  -No loss data

                b.Explicit Casting

                  -Done by developer
                  -Bigger to smaller
                  -we can loss data

                  double a=5.3;
                  int b=(int)a;

                  double a=5;
                  int b=(int)a;


         2. String Methods:

                   charAt();
                   length();
                   replace();
                   replaceFirst();
                   trim();
                   substring();
                   lastIndexOf();
                   contains();
                   equals();
                   repeat();
                   endsWith();
                   isEmpty();
                   isBlank();
                   toUpperCase();
                   toLowerCase();



                   equals() vs ==
